* {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
}

html {
      scroll-behavior: smooth;
}

body {
      min-height: fit-content;
      height: 100vh;

      display: flex;
      flex-direction: column;
      justify-content: start;
      align-items: center;

      background: rgb(14, 10, 11);

      color: #f5f5f5;
      font-family: Gotham;
}

.container {
      position: relative;

      width: 95%;
      max-width: 500px;
      padding: 40px 28px;
      margin-top: 20px;

      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;

      border-radius: 10px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
      background: rgb(14, 10, 11);
}

.container a {
      -webkit-tap-highlight-color: transparent;
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
}

@media (min-width: 560px) {
      body {
            padding: 40px 70px;
            justify-content: center;
      }

      .container::before,
      .container::after {
            content: "";

            position: absolute;
            top: -2px;
            bottom: -2px;
            left: -2px;
            right: -2px;
            z-index: -2;

            border-radius: 12px;

            background: conic-gradient(from var(--angle), rgba(255, 236, 208, 0.2), rgb(238, 233, 226) 20%, rgba(255, 236, 208, 0.2) 30%);

            animation: 3s spin linear infinite;
      }

      .container::before {
            filter: blur(2.5rem);
            opacity: 0.1;
      }
}

.container h1 {
      font-size: 3rem;
      font-family: LeagueSpartan;
      font-weight: 700;

      text-align: center;
      text-shadow: 0 4;
      letter-spacing: -2px;
}

.container h2 {
      width: 100%;
      margin-top: 39px;
      font-weight: 500;
}

.container .button {
      position: relative;
      width: 100%;
      height: 50px;

      margin-top: 20px;

      display: flex;
      align-items: center;
      justify-content: center;

      border: 2px solid rgba(245, 245, 245, 0.4);
      border-radius: 10px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
      background: rgba(17, 17, 17, 0.5);

      color: inherit;
      text-decoration: none;
      font-weight: 500;

      transition: all 500ms ease;
}

.container .button.web {
      background: linear-gradient(11deg, rgb(238, 233, 226) 0%, rgba(255, 236, 208, 0.822));
      color: #212121;
}

.container .button:hover {
      border: 2px solid rgba(245, 245, 245, 0.8);
      transform: scale(0.95);
}

.container .button .icon {
      position: absolute;
      left: 10px;
}

.container footer {
      width: 100%;
      margin-top: 35px;
}

.container footer .separator {
      width: 80%;
      height: 1.5px;

      margin: 0 auto;
      background: white;

      opacity: 0.4;
}

.container footer .separator {
      width: 80%;
      height: 1.5px;

      margin: 0 auto;
      background: white;

      opacity: 0.4;
}

.container footer .gh-link {
      margin-top: 20px;

      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;

      font-weight: 200;
      text-decoration: none;
      color: inherit;

      transition: all 500ms ease;
}

.container footer .gh-link:hover {
      color: #a87fff;
}

.container footer .gh-link:hover .icon {
      animation: tilt-n-move-shaking 500ms linear 1 forwards;
}

@keyframes tilt-n-move-shaking {
      0% {
            transform: translate(0, 0) rotate(0deg);
      }
      30% {
            transform: translate(5px, 5px) rotate(5deg);
      }
      40% {
            transform: translate(0, 0) rotate(0eg);
      }
      55% {
            transform: translate(-5px, 5px) rotate(-5deg);
      }
      75% {
            transform: translate(5px, 5px) rotate(5deg);
      }
      100% {
            transform: translate(0, 0) rotate(0deg);
      }
}
@property --angle {
      syntax: "<angle>";
      initial-value: 0deg;
      inherits: false;
}

@keyframes spin {
      from {
            --angle: 0deg;
      }
      to {
            --angle: 360deg;
      }
}
